{"ast":null,"code":"var _jsxFileName = \"/Users/eungmi/Desktop/workspace/08_workspace_react/study03/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from 'react';\n\n// function App() {\n//   //모든 UI 는 상태에서 파생된다\n//   let count = 1;\n\n//   function plus(){\n//     count++;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n//   function minus (){\n//     count--;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div id=\"counter\">{count}</div>\n//       <hr></hr>\n//       <button id=\"plus\" onClick={plus}>+</button>\n//       <button id=\"minus\" onClick={minus}>-</button>\n//     </div>\n//   );\n\n// }\n\n// let count2 = 10; //함수가 다시 호출될 때 새로 선언됨 \n// function App() {\n//   // 상태변수 생성 (상태변수로 UI 가 변경되어야 함) \n//   // 한 번 선언되면 다시 선언되지 않음 -> 리렌더링에 의해서는 다시 선언되지 않음 \n//   //컴포넌트가 unmount 될 때는 초기화 됨 \n//   const [count, setCounter] = useState(1); \n//   const handlePlus = () => { //반드시 setter 를 통해서 값을 변경해야 한다 count++ 이런거 안된다 \n//     setCounter(count + 1);\n//     count2++;\n//   }\n//   const handleMinus = () => {\n//     setCounter(count - 1);\n//     count2--;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div>{count2} , {count}</div>\n//       <hr></hr>\n//       <button onClick={handlePlus}>+</button>\n//       <button onClick={handleMinus}>-</button>\n//     </div>\n//   );\n// }\n\n// function App(){\n//   const [str, setStr] = useState('기본 메세지');\n//   const hendleChange = (e) => { //입력된 걸 e 로 꺼내옴 \n//     setStr(e.target.value);\n//   }\n\n//   return (\n//     <div>\n\n//       <h1>{str}</h1>\n\n//       <hr/>\n\n//       <div>\n//         <input type=\"text\" onChange={hendleChange}></input>\n//         <button onClick={()=>{alert(str)}}> PopUp! </button>\n//       </div>\n\n//     </div>\n//   )\n// }\n\n// function App (){\n//   const [msg, setMsg] = useState([\"Hello\",\"React\",\"State\"]); //문자열 목록 상태 저장 \n//   const [msgs, setMsgs] = useState(''); //문자열 하나의 입력 상태 값 \n//   const handelChange = (e) => {\n//     setMsgs(e.target.value)\n//   }\n//   const handelSave = () => {\n//     //spread 연산자 ...배열 ...객체 \n//     setMsg((prev)=>{\n//       console.log(prev);\n//       //return 한 값이 세팅이 됨\n//       return [...prev, msgs]; //이전 데이터를 풀어놓고 . 새데이터를 넣어줌 \n//       setMsgs('');\n//     })\n//   }\n\n//   return (\n//     <div>\n//       <ul>\n//         {\n//           msg.map((message,index)=>{\n//             return (\n//               <li key={index}>{message}</li>\n//             );\n//           })\n//         }\n//       </ul>\n//       <hr></hr>\n//       <input type=\"text\" onChange={handelChange} value={msgs}></input>\n//       <button onClick={handelSave}>Save</button>\n//     </div>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([{\n    seq: 1,\n    writer: \"tom\",\n    message: \"Hello React\"\n  }, {\n    seq: 2,\n    writer: \"sara\",\n    message: \"React State Practice\"\n  }, {\n    seq: 3,\n    writer: \"jack\",\n    message: \"Object Array\"\n  }]);\n  const [txt, setTxt] = useState('');\n  const handelSave = () => {\n    setTxt.target.value();\n  };\n  const contents = e => {\n    setMsg(prev => {\n      return [...prev, msgs];\n      setMsgs('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uAE00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC791\\uC131\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uBA54\\uC138\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), data.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.seq\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uAE00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC791\\uC131\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uB0B4\\uC6A9\",\n            onChange: contents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handelSave,\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cUSr83p5LkdJykQVfatXCt0SRd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","data","setData","seq","writer","message","txt","setTxt","handelSave","target","value","contents","e","setMsg","prev","msgs","setMsgs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","colSpan","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/eungmi/Desktop/workspace/08_workspace_react/study03/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from 'react';\n\n\n\n// function App() {\n//   //모든 UI 는 상태에서 파생된다\n//   let count = 1;\n\n//   function plus(){\n//     count++;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n//   function minus (){\n//     count--;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div id=\"counter\">{count}</div>\n//       <hr></hr>\n//       <button id=\"plus\" onClick={plus}>+</button>\n//       <button id=\"minus\" onClick={minus}>-</button>\n//     </div>\n//   );\n\n// }\n\n// let count2 = 10; //함수가 다시 호출될 때 새로 선언됨 \n// function App() {\n//   // 상태변수 생성 (상태변수로 UI 가 변경되어야 함) \n//   // 한 번 선언되면 다시 선언되지 않음 -> 리렌더링에 의해서는 다시 선언되지 않음 \n//   //컴포넌트가 unmount 될 때는 초기화 됨 \n//   const [count, setCounter] = useState(1); \n//   const handlePlus = () => { //반드시 setter 를 통해서 값을 변경해야 한다 count++ 이런거 안된다 \n//     setCounter(count + 1);\n//     count2++;\n//   }\n//   const handleMinus = () => {\n//     setCounter(count - 1);\n//     count2--;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div>{count2} , {count}</div>\n//       <hr></hr>\n//       <button onClick={handlePlus}>+</button>\n//       <button onClick={handleMinus}>-</button>\n//     </div>\n//   );\n// }\n\n// function App(){\n//   const [str, setStr] = useState('기본 메세지');\n//   const hendleChange = (e) => { //입력된 걸 e 로 꺼내옴 \n//     setStr(e.target.value);\n//   }\n\n//   return (\n//     <div>\n\n//       <h1>{str}</h1>\n\n//       <hr/>\n\n//       <div>\n//         <input type=\"text\" onChange={hendleChange}></input>\n//         <button onClick={()=>{alert(str)}}> PopUp! </button>\n//       </div>\n\n//     </div>\n//   )\n// }\n\n\n// function App (){\n//   const [msg, setMsg] = useState([\"Hello\",\"React\",\"State\"]); //문자열 목록 상태 저장 \n//   const [msgs, setMsgs] = useState(''); //문자열 하나의 입력 상태 값 \n//   const handelChange = (e) => {\n//     setMsgs(e.target.value)\n//   }\n//   const handelSave = () => {\n//     //spread 연산자 ...배열 ...객체 \n//     setMsg((prev)=>{\n//       console.log(prev);\n//       //return 한 값이 세팅이 됨\n//       return [...prev, msgs]; //이전 데이터를 풀어놓고 . 새데이터를 넣어줌 \n//       setMsgs('');\n//     })\n//   }\n\n//   return (\n//     <div>\n//       <ul>\n//         {\n//           msg.map((message,index)=>{\n//             return (\n//               <li key={index}>{message}</li>\n//             );\n//           })\n//         }\n//       </ul>\n//       <hr></hr>\n//       <input type=\"text\" onChange={handelChange} value={msgs}></input>\n//       <button onClick={handelSave}>Save</button>\n//     </div>\n//   )\n// }\n\nfunction App (){\n  const [data, setData] = useState([\n    {seq:1, writer:\"tom\", message:\"Hello React\"},\n    {seq:2, writer:\"sara\", message:\"React State Practice\"},\n    {seq:3, writer:\"jack\", message:\"Object Array\"},\n  ]);\n  const [txt, setTxt] = useState('');\n\n  const handelSave = () => {\n    setTxt.target.value();\n  }\n  const contents = (e) =>{\n    setMsg((prev)=>{\n      return [...prev, msgs]; \n      setMsgs('');\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <table className=\"messages\">\n        <tr>\n          <th>글번호</th>\n          <th>작성자</th>\n          <th>메세지</th>\n        </tr>\n        \n          {data.map((data,index)=>{\n            return (\n              <tr key={index}>\n                <td>{data.seq}</td>\n                <td>{data.writer}</td>\n                <td>{data.message}</td>\n              </tr>\n            )\n          })}\n          <tr>\n            <td colSpan={3}>\n              <input type=\"text\" placeholder=\"글번호\"/>\n              <input type=\"text\" placeholder=\"작성자\"/>\n              <input type=\"text\" placeholder=\"내용\"onChange={contents}/>\n              <button onClick={handelSave}>추가</button>\n            </td>\n          </tr>\n      </table>\n    </div>\n  )\n} \n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}