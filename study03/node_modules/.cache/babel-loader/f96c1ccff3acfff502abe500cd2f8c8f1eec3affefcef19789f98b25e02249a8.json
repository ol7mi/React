{"ast":null,"code":"var _jsxFileName = \"/Users/eungmi/Desktop/workspace/08_workspace_react/study03/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from 'react';\n\n// function App() {\n//   //모든 UI 는 상태에서 파생된다\n//   let count = 1;\n\n//   function plus(){\n//     count++;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n//   function minus (){\n//     count--;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div id=\"counter\">{count}</div>\n//       <hr></hr>\n//       <button id=\"plus\" onClick={plus}>+</button>\n//       <button id=\"minus\" onClick={minus}>-</button>\n//     </div>\n//   );\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count2 = 10; //함수가 다시 호출될 때 새로 선언됨 \nfunction App() {\n  _s();\n  //상태변수\n  //왼쪽 상태변수 객체, 오른쪽 상태변수의 값을 집어넣을 수 있는 함수 setter\n  const [count, setCounter] = useState(1); // 상태변수 생성 (상태변수로 UI 가 변경되어야 함) - 한 번 선언되면 다시 선언되지 않음 \n  const handlePlus = () => {\n    //반드시 setter 를 통해서 값을 변경해야 한다 count++ 이런거 안된다 \n    setCounter(count + 1);\n  };\n  const handleMinus = () => {\n    setCounter(count - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlus,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMinus,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hPkjDDdewBwIgN2u6W8AA+0SuPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","count2","App","_s","count","setCounter","handlePlus","handleMinus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/eungmi/Desktop/workspace/08_workspace_react/study03/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from 'react';\n\n\n\n// function App() {\n//   //모든 UI 는 상태에서 파생된다\n//   let count = 1;\n\n//   function plus(){\n//     count++;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n//   function minus (){\n//     count--;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div id=\"counter\">{count}</div>\n//       <hr></hr>\n//       <button id=\"plus\" onClick={plus}>+</button>\n//       <button id=\"minus\" onClick={minus}>-</button>\n//     </div>\n//   );\n\n// }\n\nlet count2 = 10; //함수가 다시 호출될 때 새로 선언됨 \nfunction App() {\n  //상태변수\n  //왼쪽 상태변수 객체, 오른쪽 상태변수의 값을 집어넣을 수 있는 함수 setter\n  const [count, setCounter] = useState(1); // 상태변수 생성 (상태변수로 UI 가 변경되어야 함) - 한 번 선언되면 다시 선언되지 않음 \n  const handlePlus = () => {\n    //반드시 setter 를 통해서 값을 변경해야 한다 count++ 이런거 안된다 \n    setCounter(count + 1);\n  }\n  const handleMinus = () => {\n    setCounter(count - 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>{count}</div>\n      <hr></hr>\n      <button onClick={handlePlus}>+</button>\n      <button onClick={handleMinus}>-</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;;AAIhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,IAAIC,MAAM,GAAG,EAAE,CAAC,CAAC;AACjB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAD,UAAU,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EACD,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBF,UAAU,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EAED,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAAS,QAAA,EAAML;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClBb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTb,OAAA;MAAQc,OAAO,EAAER,UAAW;MAAAG,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCb,OAAA;MAAQc,OAAO,EAAEP,WAAY;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACV,EAAA,CApBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}