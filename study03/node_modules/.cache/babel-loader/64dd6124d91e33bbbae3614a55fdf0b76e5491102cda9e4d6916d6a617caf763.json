{"ast":null,"code":"var _jsxFileName = \"/Users/eungmi/Desktop/workspace/08_workspace_react/study03/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\n\n// function App() {\n//   //모든 UI 는 상태에서 파생된다\n//   let count = 1;\n\n//   function plus(){\n//     count++;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n//   function minus (){\n//     count--;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div id=\"counter\">{count}</div>\n//       <hr></hr>\n//       <button id=\"plus\" onClick={plus}>+</button>\n//       <button id=\"minus\" onClick={minus}>-</button>\n//     </div>\n//   );\n\n// }\n\n// let count2 = 10; //함수가 다시 호출될 때 새로 선언됨\n// function App() {\n//   // 상태변수 생성 (상태변수로 UI 가 변경되어야 함)\n//   // 한 번 선언되면 다시 선언되지 않음 -> 리렌더링에 의해서는 다시 선언되지 않음\n//   //컴포넌트가 unmount 될 때는 초기화 됨\n//   const [count, setCounter] = useState(1);\n//   const handlePlus = () => { //반드시 setter 를 통해서 값을 변경해야 한다 count++ 이런거 안된다\n//     setCounter(count + 1);\n//     count2++;\n//   }\n//   const handleMinus = () => {\n//     setCounter(count - 1);\n//     count2--;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div>{count2} , {count}</div>\n//       <hr></hr>\n//       <button onClick={handlePlus}>+</button>\n//       <button onClick={handleMinus}>-</button>\n//     </div>\n//   );\n// }\n\n// function App(){\n//   const [str, setStr] = useState('기본 메세지');\n//   const hendleChange = (e) => { //입력된 걸 e 로 꺼내옴\n//     setStr(e.target.value);\n//   }\n\n//   return (\n//     <div>\n\n//       <h1>{str}</h1>\n\n//       <hr/>\n\n//       <div>\n//         <input type=\"text\" onChange={hendleChange}></input>\n//         <button onClick={()=>{alert(str)}}> PopUp! </button>\n//       </div>\n\n//     </div>\n//   )\n// }\n\n// function App (){\n//   const [msg, setMsg] = useState([\"Hello\",\"React\",\"State\"]); //문자열 목록 상태 저장\n//   const [msgs, setMsgs] = useState(''); //문자열 하나의 입력 상태 값\n//   const handelChange = (e) => {\n//     setMsgs(e.target.value)\n//   }\n//   const handelSave = () => {\n//     //spread 연산자 ...배열 ...객체\n//     setMsg((prev)=>{\n//       console.log(prev);\n//       //return 한 값이 세팅이 됨\n//       return [...prev, msgs]; //이전 데이터를 풀어놓고 . 새데이터를 넣어줌\n//       setMsgs('');\n//     })\n//   }\n\n//   return (\n//     <div>\n//       <ul>\n//         {\n//           msg.map((message,index)=>{\n//             return (\n//               <li key={index}>{message}</li>\n//             );\n//           })\n//         }\n//       </ul>\n//       <hr></hr>\n//       <input type=\"text\" onChange={handelChange} value={msgs}></input>\n//       <button onClick={handelSave}>Save</button>\n//     </div>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([{\n    seq: 1,\n    writer: \"tom\",\n    message: \"Hello React\"\n  }, {\n    seq: 2,\n    writer: \"sara\",\n    message: \"React State Practice\"\n  }, {\n    seq: 3,\n    writer: \"jack\",\n    message: \"Object Array\"\n  }]);\n  const [obj, setObj] = useState({\n    seq: 0,\n    writer: \"\",\n    message: \"\"\n  });\n\n  //input\n  const handelChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setObj(prev => ({\n      ...prev,\n      [name]: value\n    })); //[] 를 사용하면 변수안에 있는 값을 key로 쓰겠다는 뜻임\n  };\n\n  //버튼\n  const handelSave = () => {\n    setData(prev => [...prev, obj]);\n    setObj({\n      seq: 0,\n      writer: \"\",\n      message: \"\"\n    }); //갱신 후 값 초기화\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uAE00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC791\\uC131\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uBA54\\uC138\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), data.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.seq\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          children: [\"seq\", \"writer\", \"message\"].map(item => {\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: item,\n              onChange: handelChange,\n              value: data[item]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\uAE00\\uBC88\\uD638\",\n            type: \"text\",\n            onChange: handelChange,\n            name: \"seq\",\n            value: obj.seq || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC791\\uC131\\uC790\",\n            name: \"writer\",\n            onChange: handelChange,\n            value: obj.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uB0B4\\uC6A9\",\n            name: \"message\",\n            onChange: handelChange,\n            value: obj.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handelSave,\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vCQOAvuwuPHy62+xRqFbnUIMIzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","data","setData","seq","writer","message","obj","setObj","handelChange","e","name","value","target","prev","handelSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","colSpan","item","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/eungmi/Desktop/workspace/08_workspace_react/study03/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\n// function App() {\n//   //모든 UI 는 상태에서 파생된다\n//   let count = 1;\n\n//   function plus(){\n//     count++;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n//   function minus (){\n//     count--;\n//     document.getElementById(\"counter\").innerHTML = count;\n//     console.log(count);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div id=\"counter\">{count}</div>\n//       <hr></hr>\n//       <button id=\"plus\" onClick={plus}>+</button>\n//       <button id=\"minus\" onClick={minus}>-</button>\n//     </div>\n//   );\n\n// }\n\n// let count2 = 10; //함수가 다시 호출될 때 새로 선언됨\n// function App() {\n//   // 상태변수 생성 (상태변수로 UI 가 변경되어야 함)\n//   // 한 번 선언되면 다시 선언되지 않음 -> 리렌더링에 의해서는 다시 선언되지 않음\n//   //컴포넌트가 unmount 될 때는 초기화 됨\n//   const [count, setCounter] = useState(1);\n//   const handlePlus = () => { //반드시 setter 를 통해서 값을 변경해야 한다 count++ 이런거 안된다\n//     setCounter(count + 1);\n//     count2++;\n//   }\n//   const handleMinus = () => {\n//     setCounter(count - 1);\n//     count2--;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div>{count2} , {count}</div>\n//       <hr></hr>\n//       <button onClick={handlePlus}>+</button>\n//       <button onClick={handleMinus}>-</button>\n//     </div>\n//   );\n// }\n\n// function App(){\n//   const [str, setStr] = useState('기본 메세지');\n//   const hendleChange = (e) => { //입력된 걸 e 로 꺼내옴\n//     setStr(e.target.value);\n//   }\n\n//   return (\n//     <div>\n\n//       <h1>{str}</h1>\n\n//       <hr/>\n\n//       <div>\n//         <input type=\"text\" onChange={hendleChange}></input>\n//         <button onClick={()=>{alert(str)}}> PopUp! </button>\n//       </div>\n\n//     </div>\n//   )\n// }\n\n// function App (){\n//   const [msg, setMsg] = useState([\"Hello\",\"React\",\"State\"]); //문자열 목록 상태 저장\n//   const [msgs, setMsgs] = useState(''); //문자열 하나의 입력 상태 값\n//   const handelChange = (e) => {\n//     setMsgs(e.target.value)\n//   }\n//   const handelSave = () => {\n//     //spread 연산자 ...배열 ...객체\n//     setMsg((prev)=>{\n//       console.log(prev);\n//       //return 한 값이 세팅이 됨\n//       return [...prev, msgs]; //이전 데이터를 풀어놓고 . 새데이터를 넣어줌\n//       setMsgs('');\n//     })\n//   }\n\n//   return (\n//     <div>\n//       <ul>\n//         {\n//           msg.map((message,index)=>{\n//             return (\n//               <li key={index}>{message}</li>\n//             );\n//           })\n//         }\n//       </ul>\n//       <hr></hr>\n//       <input type=\"text\" onChange={handelChange} value={msgs}></input>\n//       <button onClick={handelSave}>Save</button>\n//     </div>\n//   )\n// }\n\nfunction App() {\n  const [data, setData] = useState([\n    { seq: 1, writer: \"tom\", message: \"Hello React\" },\n    { seq: 2, writer: \"sara\", message: \"React State Practice\" },\n    { seq: 3, writer: \"jack\", message: \"Object Array\" },\n  ]);\n  const [obj, setObj] = useState({ seq: 0, writer: \"\", message: \"\" });\n\n  //input\n  const handelChange = (e) => {\n    let { name, value } = e.target;\n    setObj((prev) => ({ ...prev, [name]: value })); //[] 를 사용하면 변수안에 있는 값을 key로 쓰겠다는 뜻임\n  };\n\n  //버튼\n  const handelSave = () => {\n    setData((prev) => [...prev, obj]);\n    setObj({ seq: 0, writer: \"\", message: \"\" }); //갱신 후 값 초기화\n  };\n\n  return (\n    <div className=\"container\">\n      <table className=\"messages\">\n        <tr>\n          <th>글번호</th>\n          <th>작성자</th>\n          <th>메세지</th>\n        </tr>\n\n        {data.map((data, index) => {\n          return (\n            <tr key={index}>\n              <td>{data.seq}</td>\n              <td>{data.writer}</td>\n              <td>{data.message}</td>\n            </tr>\n          );\n        })}\n\n        <tr>\n          <td colSpan={3}>\n            {[\"seq\",\"writer\",\"message\"].map((item)=>{\n              return(\n                <input type=\"text\" name={item} onChange={handelChange} value={data[item]}></input>\n              )\n            })}\n          </td>\n        </tr>\n\n        <tr>\n          <td colSpan={3}>\n            <input\n              placeholder=\"글번호\"\n              type=\"text\"\n              onChange={handelChange}\n              name=\"seq\"\n              value={obj.seq || \"\"}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"작성자\"\n              name=\"writer\"\n              onChange={handelChange}\n              value={obj.writer}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"내용\"\n              name=\"message\"\n              onChange={handelChange}\n              value={obj.message}\n            />\n            <button onClick={handelSave}>추가</button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}